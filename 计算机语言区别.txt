编译类型语言：优化为二进制，cpu直接进行解读。
解释型语言：运行时，使用解释器进行解读。
混合语言：被优化的中间码，再由解释器进行解读。

针对代码：
动态语言：运行时可以改变其代码结构：例如新的函数、对象、代码可以被引进，已有的函数可以被删除或是其他结构上的变化。
静态语言：运行时代码结构不可变的语言。

针对数据类型：
动态类型语言：运行期间才去做数据类型检查。
静态类型语言：编译期间或者运行前进行数据类型检查。

针对变量的数据类型是否可以被改变：
强类型语言：当一个变量被指定为某个数据类型，如果不经过强制类型转换，那么它就永远是这个数据类型。
弱类型语言：一个变量可以被赋予不同数据类型的值。