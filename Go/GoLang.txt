下载地址：
https://golang.org/dl/
https://golang.google.cn/dl/

压缩包下载并解压到你想要的目录下：https://dl.google.com/go/go1.12.8.windows-amd64.zip


环境变量:GoRoot:D:\SoftCode\go1.12.7\go
在path里添加 %GoRoot%\bin


GOROOT：Go的安装路径，如果这个路径不正确，Go的一系列命令都无法执行。
GOPATH：编译后二进制文件的存放目的地和import包的搜索路径。（默认为当前目录下）

var f string = "Runoob" 简写为 f := "Runoob"
:=  一种动态声明方式，出现在 := 左侧的变量不应该是已经被声明过的，否则会导致编译错误，此方式只能在函数体中出现。

iota
<< 二进制左移
在函数内，变量声明而不使用，编译时则会报错。
不同之处：
func main()  
{  // 错误，{ 不能在单独的行上
    fmt.Println("Hello, World!")
}
只有for循坏：break，continue，goto

函数，可以直接返回多个值
func swap(x, y string) (string, string) {
   return y, x
}

数组：
声明：var variable_name [SIZE] variable_type
初始化：var balance = [5]float32{1000.0, 2.0, 3.4, 7.0, 50.0}
var balance = [...]float32{1000.0, 2.0, 3.4, 7.0, 50.0}

结构体
type struct_variable_type struct {
   member definition;
   ...
   member definition;
}

初始化切片
var identifier []type = make([]T, length, capacity)
len() 获取长度
cap() 获取最长可达
当追加值时，容量不够，则容量进行翻倍。

Range 用于迭代

Map集合
/* 声明变量，默认 map 是 nil */
var map_variable map[key_data_type]value_data_type
/* 使用 make 函数 */
map_variable := make(map[key_data_type]value_data_type)
根据键删除某个值 delete(map_variable,key)

支持类型转换
float32()

Go 语言接口
type interface_name interface {
   method_name1 [return_type]
   ...
   method_namen [return_type]
}
/* 实现接口方法 */
func (struct_name_variable struct_name) method_name1() [return_type] {
   /* 方法实现 */
}

Go 并发，通过go关键字

通道（channel）是用来传递数据的一个数据结构。
可用于两个 goroutine 之间通过传递一个指定类型的值来同步运行和通讯。操作符 <- 用于指定通道的方向，发送或接收。如果未指定方向，则为双向通道。
创建通道：ch := make(chan int)
可以设置缓冲区：ch := make(chan int, 100)