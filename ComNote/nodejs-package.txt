knex mongoose mongod  mencached  

Dataloader（官方网址）是由facebook推出，能大幅降低数据库的访问频次，经常在Graphql场景中使用。
主要通过2个机制来降低数据库的访问频次：批处理 和 缓存。

Knex.js是为Postgres，MSSQL，MySQL，MariaDB，SQLite3，Oracle和Amazon Redshift设计的“包含电池”SQL查询构建器，其设计灵活，便于携带并且使用起来非常有趣。它具有传统的节点样式回调以及用于清洁异步流控制的承诺接口，流接口，全功能查询和模式构建器，事务支持（带保存点），连接池 以及不同查询客户和方言之间的标准化响应。

mongodb
1. 查询所有字段：db.表名.fing({ 条件})
2. db.表名.fing({ 条件} , { 查询的字段})

1.Model.create(data, [callback(error, doc)])：创建一个新的Mongoose文档并保存到数据库 

2.Model.remove(query, [callback(error)])：删除集合中与查询条件匹配的文档。当完成时，调用带error参数的回调函数。
 
3.Model.find(query, [fields], [options], [callback(error, docs)])：查找与查询条件（JSON对象）匹配的文档 

4.Model.update(query, update, [options], [callback(error, affectedCount, raw)])：更新文档，与本地更新类似 

5.Model.populate(docs, options, [callback(error, doc)])：使用其他集合的引用来填充文档；这是替换的另一种说法 

6.Model.findOne(query, [fields], [options], [callback(error, doc)])：查找第一个与查询条件匹配的文档 

7.Model.findById(id, [fields], [options], [callback(error, doc)])：查找第一个_id值与id参数相同的元素（id根据原型进行类型转换） 

8.Model.findOneAndUpdate([query], [update], [options], [callback(error, doc)])：查找第一个和查询条件匹配的文档然后更新他，并且返回这个文档对象；同类型的方法是findAndModify 
9.Model.findOneAndRemove(query, [options], [callback(error, doc)])：查找第一个和查询条件匹配的文档然后删除他，并且返回这个文档对象 

10.Model.findByIdAndUpdate(id, [update], [options], [callback(error, doc)])：和findOneAndUpdate类似，但是只用ID来匹配